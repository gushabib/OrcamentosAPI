// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrcamentosAPI.Data;

#nullable disable

namespace OrcamentosAPI.Migrations
{
    [DbContext(typeof(DbAppContext))]
    [Migration("20220824021132_relacionamentos")]
    partial class relacionamentos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("OrcamentosAPI.Models.Orcamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("QtdProdutos")
                        .HasColumnType("double");

                    b.Property<double>("ValorTotalProdutos")
                        .HasColumnType("double");

                    b.Property<int>("VendedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VendedorId")
                        .IsUnique();

                    b.ToTable("Orcamentos");
                });

            modelBuilder.Entity("OrcamentosAPI.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("OrcamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.Property<int>("VendedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrcamentoId");

                    b.HasIndex("VendedorId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("OrcamentosAPI.Models.Vendedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Comissao")
                        .HasColumnType("double");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Vendedor");
                });

            modelBuilder.Entity("OrcamentosAPI.Models.Orcamento", b =>
                {
                    b.HasOne("OrcamentosAPI.Models.Vendedor", "Vendedor")
                        .WithOne("Orcamento")
                        .HasForeignKey("OrcamentosAPI.Models.Orcamento", "VendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("OrcamentosAPI.Models.Produto", b =>
                {
                    b.HasOne("OrcamentosAPI.Models.Orcamento", "Orcamento")
                        .WithMany("Produtos")
                        .HasForeignKey("OrcamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrcamentosAPI.Models.Vendedor", "Vendedor")
                        .WithMany("Produtos")
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orcamento");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("OrcamentosAPI.Models.Orcamento", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("OrcamentosAPI.Models.Vendedor", b =>
                {
                    b.Navigation("Orcamento")
                        .IsRequired();

                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
